{"remainingRequest":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lee\\Desktop\\myblog\\blog_view\\src\\components\\ValidCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\src\\components\\ValidCode.vue","mtime":1651238837747},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdWYWxpZENvZGUnLA0KICBwcm9wczogew0KICAgIHdpZHRoOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAnMTUwcHgnDQogICAgfSwNCiAgICBoZWlnaHQ6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIGRlZmF1bHQ6ICc0MHB4Jw0KICAgIH0sDQogICAgbGVuZ3RoOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiA0DQogICAgfQ0KICB9LA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY29kZUxpc3Q6IFtdDQogICAgfQ0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICB0aGlzLmNyZWF0ZWRDb2RlKCkNCiAgICB0aGlzLmdldENvZGUoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgcmVmcmVzaENvZGUgKCkgew0KICAgICAgdGhpcy5jcmVhdGVkQ29kZSgpDQogICAgICB0aGlzLmdldENvZGUoKQ0KICAgIH0sDQogICAgY3JlYXRlZENvZGUgKCkgew0KICAgICAgbGV0IGxlbiA9IHRoaXMubGVuZ3RoLA0KICAgICAgICBjb2RlTGlzdCA9IFtdLA0KICAgICAgICBjaGFycyA9ICdBQkNERUZHSEpLTU5QUVJTVFdYWVphYmNkZWZoaWprbW5wcnN0d3h5ejAxMjM0NTY3ODknLA0KICAgICAgICBjaGFyc0xlbiA9IGNoYXJzLmxlbmd0aA0KICAgICAgLy8g55Sf5oiQDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7DQogICAgICAgIGxldCByZ2IgPSBbTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjIwKSwgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjQwKSwgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjAwKV0NCiAgICAgICAgY29kZUxpc3QucHVzaCh7DQogICAgICAgICAgY29kZTogY2hhcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJzTGVuKSksDQogICAgICAgICAgY29sb3I6IGByZ2IoJHtyZ2J9KWAsDQogICAgICAgICAgZm9udFNpemU6IGAke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSozMCkgKyAyMH1weGAsDQogICAgICAgICAgcGFkZGluZzogYCR7W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKV19cHhgLA0KICAgICAgICAgIGJvcmRlcjogJyR7MX1weCcsDQogICAgICAgICAgdHJhbnNmb3JtOiBgcm90YXRlKCR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOTApIC0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogOTApfWRlZylgDQogICAgICAgIH0pDQogICAgICB9DQogICAgICAvLyDmjIflkJENCiAgICAgIHRoaXMuY29kZUxpc3QgPSBjb2RlTGlzdA0KICAgICAgLy8g5bCG5b2T5YmN5pWw5o2u5rS+5Y+R5Ye65Y67DQogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6dmFsdWUnLCBjb2RlTGlzdC5tYXAoaXRlbSA9PiBpdGVtLmNvZGUpLmpvaW4oJycpKQ0KICAgIH0sDQogICAgZ2V0U3R5bGUgKGRhdGEpIHsNCiAgICAgIHJldHVybiBgY29sb3I6ICR7ZGF0YS5jb2xvcn07IGZvbnQtc2l6ZTogJHtkYXRhLmZvbnRTaXplfTsgcGFkZGluZzogJHtkYXRhLnBhZGRpbmd9OyB0cmFuc2Zvcm06ICR7ZGF0YS50cmFuc2Zvcm19YA0KICAgIH0sDQoNCiAgICBnZXRDb2RlKCl7DQogICAgICBsZXQgY29kZSA9ICcnDQogICAgICBmb3IobGV0IGl0ZW0gb2YgdGhpcy5jb2RlTGlzdCl7DQogICAgICAgIGNvZGUgKz0gaXRlbS5jb2RlDQogICAgICB9DQogICAgICBpZiAoY29kZS5sZW5ndGggIT0gNCl7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uoe21lc3NhZ2U6ICfpqozor4HnoIHlh7rplJnkuoYoJytjb2RlKycpJywgdHlwZTogJ2Vycm9yJywgc2hvd0Nsb3NlOiB0cnVlfSkNCiAgICAgIH0NCiAgICAgIHRoaXMuJGVtaXQoJ2xpc3RlbicsIGNvZGUpDQogICAgfQ0KDQogIH0NCn0NCg=="},{"version":3,"sources":["ValidCode.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ValidCode.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"ValidCode disabled-select\" :style=\"`width:${width}; height:${height}`\" @click=\"refreshCode\">\r\n    <span v-for=\"(item, index) in codeList\" :key=\"index\" :style=\"getStyle(item)\">{{item.code}}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ValidCode',\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '150px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '40px'\r\n    },\r\n    length: {\r\n      type: Number,\r\n      default: 4\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      codeList: []\r\n    }\r\n  },\r\n  mounted () {\r\n    this.createdCode()\r\n    this.getCode()\r\n  },\r\n  methods: {\r\n    refreshCode () {\r\n      this.createdCode()\r\n      this.getCode()\r\n    },\r\n    createdCode () {\r\n      let len = this.length,\r\n        codeList = [],\r\n        chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz0123456789',\r\n        charsLen = chars.length\r\n      // 生成\r\n      for (let i = 0; i < len; i++) {\r\n        let rgb = [Math.round(Math.random() * 220), Math.round(Math.random() * 240), Math.round(Math.random() * 200)]\r\n        codeList.push({\r\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\r\n          color: `rgb(${rgb})`,\r\n          fontSize: `${Math.floor(Math.random()*30) + 20}px`,\r\n          padding: `${[Math.floor(Math.random() * 10)]}px`,\r\n          border: '${1}px',\r\n          transform: `rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)`\r\n        })\r\n      }\r\n      // 指向\r\n      this.codeList = codeList\r\n      // 将当前数据派发出去\r\n      this.$emit('update:value', codeList.map(item => item.code).join(''))\r\n    },\r\n    getStyle (data) {\r\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`\r\n    },\r\n\r\n    getCode(){\r\n      let code = ''\r\n      for(let item of this.codeList){\r\n        code += item.code\r\n      }\r\n      if (code.length != 4){\r\n        this.$message({message: '验证码出错了('+code+')', type: 'error', showClose: true})\r\n      }\r\n      this.$emit('listen', code)\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .ValidCode{\r\n    background: white;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n    span{\r\n      display: inline-block;\r\n    }\r\n  }\r\n</style>"]}]}