{"remainingRequest":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lee\\Desktop\\myblog\\blog_view\\src\\views\\Reginster.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\src\\views\\Reginster.vue","mtime":1657249161647},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\babel.config.js","mtime":1651919093297},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lee\\Desktop\\myblog\\blog_view\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gaW1wb3J0IGJhY2tncm91bmQgZnJvbSAnLi4vY29tcG9uZW50cy9iYWNrZ3JvdW5kLnZ1ZScKaW1wb3J0IFZhbGlkQ29kZSBmcm9tICdAL2NvbXBvbmVudHMvVmFsaWRDb2RlLnZ1ZSc7CmltcG9ydCB7IHJlZ2lzdGVyVG9CYWNrIH0gZnJvbSAnQC9hcGlzL3VzZXIuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1JlZ2lzdGVyJywKICBjb21wb25lbnRzOiB7CiAgICBWYWxpZENvZGUKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcjogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICBwYXNzd29yZHM6ICcnLAogICAgICAgIHBob25lTnVtYmVyOiAnJywKICAgICAgICBlbWFpbDogJycsCiAgICAgICAgY29kZTogJycKICAgICAgfSwKICAgICAgY29kZTogJycsCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeaYteensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDYsCiAgICAgICAgICBtYXg6IDEyLAogICAgICAgICAgbWVzc2FnZTogJ+mVv+W6puWcqCA2IOWIsCAxMiDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgcGFzc3dvcmQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXlr4bnoIEnLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDQsCiAgICAgICAgICBtYXg6IDgsCiAgICAgICAgICBtZXNzYWdlOiAn6ZW/5bqm5ZyoIDQg5YiwIDgg5Liq5a2X56ymJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHBhc3N3b3JkczogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+ehruiupOWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogNCwKICAgICAgICAgIG1heDogOCwKICAgICAgICAgIG1lc3NhZ2U6ICfplb/luqblnKggNCDliLAgOCDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgcGhvbmVOdW1iZXI6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXnlLXor53lj7fnoIEnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiAxMSwKICAgICAgICAgIG1heDogMTEsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5q2j56Gu55qE55S16K+d5Y+356CBJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIGVtYWlsOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl6YKu566x6LSm5Y+3JywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogNiwKICAgICAgICAgIG1heDogMTIsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5q2j56Gu55qE6YKu566xJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIGNvZGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXpqozor4HnoIEnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiA0LAogICAgICAgICAgbWF4OiA0LAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeato+ehrueahOmqjOivgeeggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGRvUmVnaW5zdGVyKGZvcm1OYW1lKSB7CiAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCAmJiB0aGF0LmNoZWNrUmVnaW5zdGVyRGF0YSh0aGF0LnVzZXIucGhvbmVOdW1iZXIsIHRoYXQudXNlci5lbWFpbCwgdGhhdC51c2VyLmNvZGUpKSB7CiAgICAgICAgICByZWdpc3RlclRvQmFjayh7CiAgICAgICAgICAgIHBhc3N3b3JkOiB0aGF0LnVzZXIucGFzc3dvcmQsCiAgICAgICAgICAgIG5pY2tuYW1lOiB0aGF0LnVzZXIubmFtZSwKICAgICAgICAgICAgcGhvbmVOdW1iZXI6IHRoYXQudXNlci5waG9uZU51bWJlciwKICAgICAgICAgICAgZW1haWw6IHRoYXQudXNlci5lbWFpbAogICAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgIHRoYXQuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICLotKblj7fms6jlhozmiJDlip8iLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICBzaG93Q2xvc2U6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGFsZXJ0KCLkvaDnmoTotKblj7fmmK8iICsgcmVzcG9uc2UuZGF0YS5kYXRhLmFjY291bnQpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIHRlc3QoKSB7CiAgICAgIHJlZ2lzdGVyVG9CYWNrKHsKICAgICAgICBhY2NvdW50OiAnMjAyMjMwMjUnLAogICAgICAgIHBhc3N3b3JkOiAnMTIzNCcsCiAgICAgICAgbmlja25hbWU6ICd0eW9qZCcsCiAgICAgICAgcGhvbmVOdW1iZXI6ICdkYWR3ZGEnLAogICAgICAgIGVtYWlsOiAnZGFkZGEnCiAgICAgIH0pOwogICAgfSwKCiAgICBjaGVja1JlZ2luc3RlckRhdGEocGhvbmVudW1iZXIsIGVtYWlsLCBjb2RlKSB7CiAgICAgIGlmICghL15cZCskLy50ZXN0KHBob25lbnVtYmVyKSkgewogICAgICAgIC8v55S16K+d5Y+356CB5Lit5a2Y5Zyo5pWw5a2X5Lul5aSW55qE5a2X56ymCiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiAn55S16K+d5Y+356CB5qC85byP6ZSZ6K+vJywKICAgICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgICBzaG93Q2xvc2U6IHRydWUKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICghbmV3IFJlZ0V4cCgnLipALipcXC5jb20nKS50ZXN0KGVtYWlsKSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogJ+mCrueuseagvOW8j+mUmeivrycsCiAgICAgICAgICB0eXBlOiAnZXJyb3InLAogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBpZiAoY29kZSAhPSB0aGlzLmNvZGUgfHwgY29kZSA9PSAnJykgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogJ+mqjOivgeeggemUmeivrycsCiAgICAgICAgICB0eXBlOiAnZXJyb3InLAogICAgICAgICAgc2hvd0Nsb3NlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCgogICAgZ2V0Q29kZShjb2RlKSB7CiAgICAgIHRoaXMuY29kZSA9IGNvZGU7CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["Reginster.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"reginsterContainer\">\r\n    <el-form label-position=\"left\" ref=\"form\" :model=\"user\" class=\"loginForm\" :rules=\"rules\">\r\n      <h2 style=\"margin-bottom: 10px; color: rgb(0, 195, 255)\">注册</h2>\r\n      <el-form-item prop=\"name\">\r\n        <el-input type=\"text\" auto-complete=\"false\" placeholder=\"昵称\" v-model=\"user.name\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input type=\"password\" auto-complete=\"false\" placeholder=\"密码\" v-model=\"user.password\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"passwords\">\r\n        <el-input type=\"password\" auto-complete=\"false\" placeholder=\"确认密码\" v-model=\"user.passwords\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"phoneNumber\">\r\n        <el-input type=\"text\" auto-complete=\"false\" placeholder=\"手机号码\" v-model=\"user.phoneNumber\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"email\">\r\n        <el-input type=\"text\" auto-complete=\"false\" placeholder=\"邮箱\" v-model=\"user.email\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"code\">\r\n        <el-input\r\n          type=\"text\"\r\n          auto-complete=\"false\"\r\n          placeholder=\"验证码\"\r\n          v-model=\"user.code\"\r\n          style=\"width: 188px; float: left; margin-right: 10px\"\r\n        ></el-input>\r\n        <valid-code @listen=\"getCode\"></valid-code>\r\n      </el-form-item>\r\n      <el-button @click=\"test()\">test</el-button>\r\n      <el-tooltip class=\"item\" effect=\"dark\" content=\"注册成功后账号将发送至您的邮箱\" placement=\"top\">\r\n        <el-button @click=\"doReginster('form')\">注册</el-button>\r\n      </el-tooltip>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import background from '../components/background.vue'\r\nimport ValidCode from '@/components/ValidCode.vue'\r\nimport {registerToBack} from '@/apis/user.js'\r\n\r\nexport default {\r\n  name: 'Register',\r\n  components:{\r\n    ValidCode,\r\n  },\r\n  data() {\r\n    return {\r\n      user: {\r\n        name: '',\r\n        password: '',\r\n        passwords: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        code: '',\r\n      },\r\n      code: '',\r\n      rules:{\r\n           name: [\r\n            { required: true, message: '请输入昵称', trigger: 'blur' },\r\n            { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入密码', trigger: 'change' },\r\n            { min: 4, max: 8, message: '长度在 4 到 8 个字符', trigger: 'blur' }\r\n          ],\r\n          passwords: [\r\n            { required: true, message: '请确认密码', trigger: 'change' },\r\n            { min: 4, max: 8, message: '长度在 4 到 8 个字符', trigger: 'blur' }\r\n          ],\r\n           phoneNumber: [\r\n            { required: true, message: '请输入电话号码', trigger: 'blur' },\r\n            { min: 11, max: 11, message: '请输入正确的电话号码', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { required: true, message: '请输入邮箱账号', trigger: 'blur' },\r\n            { min: 6, max: 12, message: '请输入正确的邮箱', trigger: 'blur' }\r\n          ],\r\n          code: [\r\n            { required: true, message: '请输入验证码', trigger: 'blur' },\r\n            { min: 4, max: 4, message: '请输入正确的验证码', trigger: 'blur' }\r\n          ],\r\n      },\r\n    }\r\n  },\r\n  methods: {\r\n    doReginster(formName) {\r\n      let that = this\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid && that.checkReginsterData(that.user.phoneNumber, that.user.email, that.user.code)) {\r\n            registerToBack({\r\n              password: that.user.password,\r\n              nickname: that.user.name,\r\n              phoneNumber: that.user.phoneNumber,\r\n              email: that.user.email,\r\n            }).then(response=>{\r\n                that.$message({message: \"账号注册成功\", type: \"success\", showClose: true})\r\n                alert(\"你的账号是\" + response.data.data.account)\r\n            })\r\n\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        })\r\n      },\r\n\r\n      test(){\r\n        registerToBack({\r\n              account: '20223025',\r\n              password: '1234',\r\n              nickname: 'tyojd',\r\n              phoneNumber: 'dadwda',\r\n              email: 'dadda',\r\n            })\r\n      },\r\n\r\n    checkReginsterData(phonenumber, email, code){\r\n      if (!(/^\\d+$/).test(phonenumber)){\r\n        //电话号码中存在数字以外的字符\r\n          this.$message({message: '电话号码格式错误', type: 'error', showClose: true})\r\n          return false\r\n      }\r\n      if (!(new RegExp('.*@.*\\\\.com').test(email))){\r\n        this.$message({message: '邮箱格式错误', type: 'error', showClose: true})\r\n        return false\r\n      }\r\n      if (code != this.code || code == ''){\r\n        this.$message({message: '验证码错误', type: 'error', showClose: true})\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n\r\n    getCode(code){\r\n      this.code = code\r\n    }\r\n\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.reginsterContainer {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  margin: 0 auto;\r\n  background-image: url('../assets/reginster_bg.jpg');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n.reginsterContainer .el-input {\r\n  border: 1px solid rgb(182, 170, 170);\r\n}\r\n\r\n.reginsterContainer el-button {\r\n  background: linear-gradient(to right, #facabb);\r\n}\r\n\r\n.reginsterContainer .loginForm {\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  margin: 100px auto;\r\n  box-shadow: 0 0 10px gray;\r\n  width: 350px;\r\n  padding: 15px 35px 15px 35px;\r\n  border: 1px solid gray;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}